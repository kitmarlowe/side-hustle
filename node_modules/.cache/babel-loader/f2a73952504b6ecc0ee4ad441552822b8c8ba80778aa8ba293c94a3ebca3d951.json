{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\side-hustle\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const addTask = event => {\n    event.preventDefault(); // Prevent the form from causing a page reload\n    if (!task.trim()) return; // Ignore empty task entries\n    setTasks([...tasks, {\n      id: Date.now(),\n      text: task,\n      isEditing: false\n    }]);\n    setTask(''); // Clear the task input field\n  };\n  const editTask = (id, newText) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          text: newText\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const startEditing = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          isEditing: true\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const stopEditing = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          isEditing: false\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTask,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: task,\n          onChange: e => setTask(e.target.value),\n          type: \"text\",\n          placeholder: \"Enter a new task\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [task.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: task.text,\n            onChange: e => editTask(task.id, e.target.value),\n            onBlur: () => stopEditing(task.id),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(task.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => deleteTask(task.id),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"pA78OmIk8vrGIGNP3RwLyEUg+ME=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","task","setTask","addTask","event","preventDefault","trim","id","Date","now","text","isEditing","editTask","newText","updatedTasks","map","startEditing","stopEditing","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","e","target","type","placeholder","autoFocus","onBlur","onClick","icon","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/side-hustle/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n    const [tasks, setTasks] = useState([]);\n    const [task, setTask] = useState('');\n\n    const addTask = (event) => {\n        event.preventDefault(); // Prevent the form from causing a page reload\n        if (!task.trim()) return; // Ignore empty task entries\n        setTasks([...tasks, { id: Date.now(), text: task, isEditing: false }]);\n        setTask(''); // Clear the task input field\n    };\n\n    const editTask = (id, newText) => {\n        const updatedTasks = tasks.map(task => {\n            if (task.id === id) {\n                return { ...task, text: newText };\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const startEditing = (id) => {\n        const updatedTasks = tasks.map(task => {\n            if (task.id === id) {\n                return { ...task, isEditing: true };\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const stopEditing = (id) => {\n        const updatedTasks = tasks.map(task => {\n            if (task.id === id) {\n                return { ...task, isEditing: false };\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const deleteTask = (id) => {\n        setTasks(tasks.filter(task => task.id !== id));\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>To-Do List</h1>\n                <form onSubmit={addTask}>\n                    <input\n                        value={task}\n                        onChange={(e) => setTask(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Enter a new task\"\n                        autoFocus\n                    />\n                    <button type=\"submit\">Add</button>\n                </form>\n                <ul>\n                    {tasks.map((task) => (\n                        <li key={task.id}>\n                            {task.isEditing ? (\n                                <input\n                                    type=\"text\"\n                                    value={task.text}\n                                    onChange={(e) => editTask(task.id, e.target.value)}\n                                    onBlur={() => stopEditing(task.id)}\n                                    autoFocus\n                                />\n                            ) : (\n                                <>\n                                    {task.text}\n                                    <button onClick={() => startEditing(task.id)}>Edit</button>\n                                </>\n                            )}\n                            <button className=\"delete\" onClick={() => deleteTask(task.id)}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}